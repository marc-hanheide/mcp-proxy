# Generated by https://smithery.ai. See: https://smithery.ai/docs/config#dockerfile
# Use a Python image with uv pre-installed
FROM nikolaik/python-nodejs:python3.12-nodejs22 AS uv

# Install the project into /app
WORKDIR /app

# Enable bytecode compilation
ENV UV_COMPILE_BYTECODE=1

# Copy from the cache instead of linking since it's a mounted volume
ENV UV_LINK_MODE=copy

RUN pip install --no-cache-dir uv

# Install the project's dependencies using the lockfile and settings
RUN --mount=type=cache,target=/root/.cache/uv \
    --mount=type=bind,source=uv.lock,target=uv.lock \
    --mount=type=bind,source=pyproject.toml,target=pyproject.toml \
    uv sync --frozen --no-install-project --no-dev --no-editable

# Then, add the rest of the project source code and install it
# Installing separately from its dependencies allows optimal layer caching

ADD . /app
RUN --mount=type=cache,target=/root/.cache/uv \
    uv sync --frozen --no-dev --no-editable


FROM nikolaik/python-nodejs:python3.12-nodejs22

LABEL org.opencontainers.image.source=https://github.com/sparfenyuk/mcp-proxy
LABEL org.opencontainers.image.description="Connect to MCP servers that run on SSE transport, or expose stdio servers as an SSE server using the MCP Proxy server."
LABEL org.opencontainers.image.licenses=MIT

COPY --from=uv --chown=app:app /app/.venv /app/.venv
#COPY --from=node --chown=app:app /npm /npm

# Place executables in the environment at the front of the path
ENV PATH="/app/.venv/bin:/usr/local/bin:$PATH"

#ENTRYPOINT ["/bin/sh", "-c"]

#CMD ["mcp-proxy", "--sse-host", "0.0.0.0", "--sse-port", "8888", "-e", "PATH", "/app/.venv/bin:/usr/local/bin:/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin", "--", "/usr/local/bin/npx", "-y", "@modelcontextprotocol/server-filesystem", "/filesystem"]

#CMD "mcp-proxy http://localhost:8080/sse" 